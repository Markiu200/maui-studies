<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    x:Class="MyFirstMauiApp1.AppShell"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="clr-namespace:MyFirstMauiApp1"
    Shell.FlyoutBehavior="Flyout"
    Shell.ForegroundColor="Black"
    FlyoutBackgroundColor="Beige"
    Title="MyFirstMauiApp1">

    <Shell.FlyoutHeader>
        <VerticalStackLayout>
            <Image Source="bike.png"></Image>
            <Label Text="Flyout bit!" HorizontalTextAlignment="Center"></Label>
        </VerticalStackLayout>
    </Shell.FlyoutHeader>
    
    <ShellContent
        Title="TestPage"
        Icon="dotnet_bot.png"
        ContentTemplate="{DataTemplate local:TestPage}"
        Route="TestPage" />
    <ShellContent
        Title="MainPage"
        Icon="bike.png"
        ContentTemplate="{DataTemplate local:MainPage}"
        Route="MainPage" />
    <ShellContent
        Title="TestPage2"
        Icon="dotnet_bot.png"
        ContentTemplate="{DataTemplate local:TestPage2}"
        Route="TestPage2" />
    <ShellContent
        Title="TestPage3"
        Icon="bike.png"
        ContentTemplate="{DataTemplate local:TestPage3}"
        Route="TestPage3" />
    <ShellContent
        Title="TestPage3_CS"
        Icon="dotnet_bot.png"
        ContentTemplate="{DataTemplate local:TestPage3_CS}"
        Route="TestPage3_CS" />

    <Shell.FlyoutFooter>
        <VerticalStackLayout>
            <Image Source="dotnet_bot.png"></Image>
        </VerticalStackLayout>
    </Shell.FlyoutFooter>

</Shell>
<!-- 
    .NET Maui Apps | How to create Flyout, Tab Bar and Tabs in Maui Mobile and Desktop applications. 
    https://www.youtube.com/watch?v=Ru1G3-_G2Qs
    
    Shell.FlyoutBehavior="Flyout"       - activates "hamburger" menu, from which choosing page will be possible.
    Shell.ForegroundColor="Black"       - changes burger color to black, instead of default white apparently, so it's visible on screen.
    FlyoutBackgroundColor="Beige"       - as name suggests, I put this annotation here to mark it as "I added that to code".
    
    Unlike changing page by "await Navigation.PushAsync(new TestPage2());" like in TestPage, here the constructor is not called, 
    so all the saved clicks don't disappear while switching.
    First page that appears is the first page on the list, it doesn't search for "MainPage" or anything.
    
    In order to have TabBar, loose ShellContent items needed to be removed.
    
    https://learn.microsoft.com/en-us/answers/questions/1376316/unable-to-get-tab-bar-and-flyout-together-in-the-s
    You cannot have both Flyout and TabBar. it's one or another, at least in Shell.
    
    Turns out "Shell" is an XAML file just like is Page ones. It's just here you define "navigation" part.
-->